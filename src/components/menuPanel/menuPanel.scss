:host {
    --color: #ccc;
    --color-hover: #eee;
    --background: #3c3c3c;
    --background-hover: rgb(168, 54, 71);
    --arrow-color: #ccc;
    --arrow-color-hover: #eee;
    --shadow-color: #fff5;

    --height: 3rem;
    --fontSize: 1.5rem;

    // dropDown
    --leftBorder: dimgray;

    // treeSelect
    --expanderWidth: var(--fontSize);
    --expanderBorderWidth: calc(var(--expanderWidth) * 0.5);
    --focus-theme-color: #db4d6f;
}
:host(.dark) {
    --color: #ccc;
    --color-hover: #eee;
    --background: #3c3c3c;
    --background-hover: #555;
    --arrow-color: #ccc;
    --arrow-color-hover: #eee;
    --shadow-color: #fff5;

    // dropDown
    --leftBorder: dimgray;

    // treeSelect
    --focus-theme-color: #eee;
}
:host(.white) {
    --color: #333;
    --color-hover: #333;
    --background: #f2f2f2;
    --background-hover: #ddd;
    --arrow-color: #333;
    --arrow-color-hover: #111;
    --shadow-color: #fff5;

    // dropDown
    --leftBorder: dimgray;

    // treeSelect
    --focus-theme-color: #333;
}

:host {
    // --color: #444;
    // --color-hover: #fff;
    // --background: linear-gradient(to bottom, #fff 0%, #e5e5e5 100px, #e5e5e5 100%);
    // --background-hover: linear-gradient(to bottom, #5d6d79, #2e3940);
    // --arrow-color: #808080;
    // --arrow-color-hover: #fff;

    position: absolute;
    display: block;
    width: inherit;
    z-index: 1;
}
:host(.dropDown) {
    --height: inherit;
    --fontSize: inherit;
}

* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}
::-webkit-scrollbar {
    // display: none;
}

ul {
    display: none;
    list-style-type: none;
    text-align: left;
    background-color: var(--background);
    width: inherit;
    max-height: calc(var(--height) * 8);
    overflow-y: auto;
    z-index: 1;
    box-shadow: 0 3px 7px -2px rgba(0, 0, 0, 0.4);
    // box-shadow: 0px 0px 4px var(--twDropDown-shadow-color);
}

:host(.show) ul {
    display: block;
}
ul.contextMenu {
    padding: 0.3rem 0;
    box-shadow: 0px 0px 4px var(--shadow-color);
}

li {
    display: block;
    position: relative;
    margin: 0;
    padding: 0;
    white-space: nowrap;

    &.hover,
    &:hover {
        color: var(--color-hover);
        background: var(--background-hover);
    }

    &.disabled {
        opacity: 0.5;
        pointer-events: none;
        cursor: default;
    }

    &.hidden {
        display: none;
    }
}

li {
    display: block;
    width: 100%;
    height: var(--height);
    padding: 0.4rem 0.7rem;
    color: var(--color);
    // border: 1px solid transparent;
    font-size: var(--fontSize);
    text-align: left;
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
    cursor: pointer;
    user-select: none;
}

li.dropDown {
    padding: 0 0.5em;
    font-size: inherit;
    line-height: inherit;
    border-left: 0.3rem solid transparent;

    &.selected {
        border-left-color: var(--leftBorder);
    }

    span {
        margin-left: 0;
        height: var(--height);
        line-height: var(--height);
    }

    i {
        display: none;
    }
}

li.contextMenu {
    height: unset;
    padding: 0.4rem 0.7rem;
    font-size: 1rem;

    span {
        margin-left: 2.2rem;
    }

    i {
        position: absolute;
        left: 0.5rem;
        width: 2rem;
        height: 2rem;
        top: 50%;
        transform: translateY(-50%);

        background-position: right;
        background-repeat: no-repeat;
        background-size: contain;
    }
}

// treeSelect
ul.treeSelect {
    padding-left: 5px !important;
}
.buttons {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    min-height: 30px;
    padding: 0.5rem 0;

    button {
        width: 8rem;
        height: 2rem;
        line-height: 2rem;
        padding: 0 1rem;
    }
}
li.treeSelect {
    height: auto;
    min-height: var(--height);
    padding: 0;

    &:hover {
        background-color: var(--background-hover);
    }

    > span {
        height: var(--height);
        line-height: var(--height);
        vertical-align: middle;
    }

    .expander {
        display: inline-block;
        vertical-align: middle;
        width: var(--expanderWidth);
        cursor: pointer;
        position: relative;
        transition: transform 150ms ease-out;

        &:before {
            position: absolute;
            top: var(--expanderBorderWidth);
            display: block;
            content: '';
            border: var(--expanderBorderWidth) solid transparent;
            border-top: var(--expanderBorderWidth) solid var(--foreground-color);
            transition: border-color 150ms;
        }
        &:hover:before {
            border-top: var(--expanderBorderWidth) solid var(--focus-theme-color);
        }
    }

    &.closed {
        > .expander {
            transform: rotate(-90deg);
        }
        > .treeSelectList {
            display: none;
        }
    }

    .checkbox {
        display: inline-block;
        vertical-align: middle;
        width: 20px;
        height: 20px;
        cursor: pointer;
        position: relative;

        &:before {
            transition: all 0.3s;
            cursor: pointer;
            position: absolute;
            inset: 0;
            margin: auto;
            content: '';
            display: block;
            width: 18px;
            height: 18px;
            // border: 1px solid #d9d9d9;
            border: 1px solid var(--color);
            border-radius: 2px;
            /* top: -0.1em; */
            // 日本語は縦に長いため微調整入れた方がいい
        }
    }

    &.bottomLayer > .checkbox {
        margin-left: var(--fontSize);
    }

    .checkbox:hover:before {
        box-shadow: 0 0 2px 1px #1890ff;
    }
    &.checked > .checkbox:before {
        background-color: #1890ff;
        border-color: #1890ff;
    }
    &.checked > .checkbox:after {
        position: absolute;
        content: '';
        display: block;
        top: -1px;
        bottom: 0;
        left: 0;
        right: 0;
        margin: auto;
        width: 5px;
        height: 9px;
        border: 2px solid #fff;
        border-top: none;
        border-left: none;
        transform: rotate(45deg);
    }
    &.halfChecked > .checkbox:before {
        background-color: #1890ff;
        border-color: #1890ff;
    }
    &.halfChecked > .checkbox:after {
        position: absolute;
        content: '';
        display: block;
        inset: 0;
        margin: auto;
        width: 10px;
        height: 2px;
        background-color: #fff;
    }
    .label {
        padding: 0 5px;
        display: inline-block;
        width: calc(100% - 40px);
    }

    .treeSelectList {
        // background-color: var(--twTreeSelectListBackground);
        // width: 100%;
        padding-left: 20px;
        height: auto;
        max-height: unset;
    }
}

hr {
    display: block;
    margin: 7px 5px;
    height: 1px;
    background-color: var(--color);
}

li.subMenu {
    &::after {
        content: '';
        position: absolute;
        right: 6px;
        top: 50%;
        transform: translateY(-50%);
        border: 5px solid transparent;
        border-left-color: var(--arrow-color);
    }

    &:hover::after {
        border-left-color: var(--arrow-color-hover);
    }
}

// ul ul {
//     top: 4px;
//     left: 99%;
// }

:host(.show) > ul {
    display: block;
    animation: fadeInUp 400ms;
}
// li:hover > ul {
//     display: block;
//     animation: fadeInUp 400ms;
// }

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translate3d(0, calc(var(--height) * 0.6), 0);
    }
    to {
        opacity: 1;
        transform: none;
    }
}

@keyframes fadeOut {
    from {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}

// for treeSelect buttons

$foreground: darken(white, 10%);
$background: #db4d6f;

*,
*::after,
*::before {
    box-sizing: border-box;
}

button {
    position: relative;
    border: none;
    font-size: 1.6rem;
    transition: color 0.5s, transform 0.2s, background-color 0.2s;
    outline: none;
    border-radius: 0.3rem;
    margin: 0 0.5rem;
    padding: 0.8rem 1.5rem;
    user-select: none;

    &:active {
        transform: translateY(0.3rem);
    }
}

.shrinkButton {
    background-color: $background;
    color: darken($background, 10%);
    color: lighten($background, 30%);

    &:hover {
        color: $foreground;
    }

    &::after,
    &::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        border-radius: 0.3rem;
    }

    &::before {
        border: 0.3rem solid darken($background, 10%);
        transition: opacity 0.3s;
    }

    &:hover::before {
        opacity: 0;
    }

    &::after {
        background-color: transparent;
        border: 0.3rem solid $foreground;
        opacity: 0;
        transform: scaleX(1.1) scaleY(1.3);
        transition: transform 0.3s, opacity 0.3s;
    }

    &:hover::after {
        opacity: 1;
        transform: scaleX(1) scaleY(1);
    }
}

// hover effect
$baseBorderColor: transparent;
$hoverBorderColor: #e6e6e6;
$hoverBorderColor: #8c8c8c;
.hoverEffect {
    position: relative;

    &::after,
    &::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        border-radius: inherit;
    }

    &::before {
        border: 0.3rem solid $baseBorderColor;
        transition: opacity 0.3s;
    }

    &:hover::before {
        opacity: 0;
    }

    &::after {
        background-color: transparent;
        border: 0.3rem solid $hoverBorderColor;
        opacity: 0;
        transform: scaleX(1.1) scaleY(1.3);
        transition: transform 0.3s, opacity 0.3s;
    }

    &:hover::after {
        opacity: 1;
        transform: scaleX(1) scaleY(1);
    }
}

//
$grayForeground: darken(white, 10%);
$grayBackground: rgb(148, 148, 148);

.shrinkButton.gray {
    background-color: $grayBackground;
    color: darken($grayBackground, 10%);
    color: lighten($grayBackground, 30%);

    &:hover {
        color: $grayForeground;
    }

    &::before {
        border: 0.3rem solid darken($grayBackground, 10%);
    }

    &::after {
        border: 0.3rem solid $grayForeground;
    }
}
